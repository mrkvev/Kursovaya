<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAIAAAACAAAAAgAAAAIAAAABAAAAAAAAAAAAAAAEAAAAAAAAAJMAAAD/AAAAogAAANIAAAD/AAAAXAAA
        AAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAGwAAAPkAAAD5AAAAGwAA
        AAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAXAAAAP8AAADSAAAA7wAA
        AP8AAAA7AAAAAAAAAAMAAAAAAAAAAAAAAA8AAAAeAAAAGwAAABwAAAAcAAAAHQAAABYAAAA0AAAA+gAA
        APoAAAA0AAAAFgAAAB0AAAAcAAAAHAAAABsAAAAeAAAADwAAAAAAAAAAAAAAAwAAAAAAAAA7AAAA/wAA
        AO8AAAD9AAAA/wAAACsAAAAAAAAAAgAAAAQAAAAAAAAAhQAAAP8AAAD1AAAA+QAAAPkAAAD6AAAA+QAA
        APoAAAD/AAAA/wAAAPoAAAD5AAAA+gAAAPkAAAD5AAAA9QAAAP8AAACFAAAAAAAAAAQAAAACAAAAAAAA
        ACsAAAD/AAAA/QAAAP0AAAD/AAAAKwAAAAAAAAACAAAABAAAAAAAAACFAAAA/wAAAPUAAAD5AAAA+QAA
        APoAAAD5AAAA+gAAAP8AAAD/AAAA+gAAAPkAAAD6AAAA+QAAAPkAAAD1AAAA/wAAAIUAAAAAAAAABAAA
        AAIAAAAAAAAAKwAAAP8AAAD9AAAA7wAAAP8AAAA7AAAAAAAAAAMAAAAAAAAAAAAAAA8AAAAeAAAAGwAA
        ABwAAAAcAAAAHQAAABYAAAA0AAAA+gAAAPoAAAA0AAAAFgAAAB0AAAAcAAAAHAAAABsAAAAeAAAADwAA
        AAAAAAAAAAAAAwAAAAAAAAA7AAAA/wAAAO8AAADSAAAA/wAAAFwAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAABsAAAD5AAAA+QAAABsAAAAAAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFwAAAD/AAAA0gAAAKIAAAD/AAAAkgAAAAAAAAAEAAAAAAAA
        AAAAAAABAAAAAgAAAAIAAAACAAAAAgAAAAMAAAAAAAAAHQAAAPoAAAD6AAAAHQAAAAAAAAADAAAAAgAA
        AAIAAAACAAAAAgAAAAEAAAAAAAAAAAAAAAQAAAAAAAAAkwAAAP8AAACiAAAAYAAAAP8AAADWAAAABgAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAcAAAA+QAAAPkAAAAcAAAAAAAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAYAAADWAAAA/wAAAF8AAAAaAAAA6AAA
        AP8AAABKAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAABwAAAD5AAAA+QAA
        ABwAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAASgAAAP8AAADnAAAAGQAA
        AAAAAACWAAAA/wAAALgAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAGwAA
        APUAAAD1AAAAGwAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAC4AAAA/wAA
        AJYAAAAAAAAAAAAAACsAAAD3AAAA/wAAAFwAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AAAAAAAcAAAA+gAAAPoAAAAcAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAXAAA
        AP8AAAD3AAAALAAAAAAAAAADAAAAAAAAAIoAAAD/AAAA6AAAACUAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAAA8AAACFAAAAhQAAAA8AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAA
        ACUAAADoAAAA/wAAAIkAAAAAAAAAAwAAAAEAAAAAAAAACQAAAMoAAAD/AAAA0AAAABUAAAAAAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAAAVAAAA0AAAAP8AAADKAAAACQAAAAAAAAABAAAAAAAAAAIAAAAAAAAAJgAAAOcAAAD/AAAA0gAA
        ACIAAAAAAAAABAAAAAMAAAABAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAABAAAAAwAA
        AAQAAAAAAAAAIgAAANIAAAD/AAAA5wAAACYAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAMgAA
        AOgAAAD/AAAA6gAAAFkAAAAAAAAAAAAAAAEAAAAEAAAABAAAAAMAAAACAAAAAgAAAAMAAAAEAAAABAAA
        AAEAAAABAAAAAAAAAFkAAADqAAAA/wAAAOgAAAAyAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAJAAAAM8AAAD/AAAA/wAAAL0AAABFAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAEUAAAC9AAAA/wAAAP8AAADPAAAAJAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAACQAAAIoAAAD5AAAA/wAAAP8AAADZAAAAkQAAAFoAAAA5AAAAKgAA
        ACoAAAA5AAAAWgAAAJEAAADZAAAA/wAAAP8AAAD5AAAAiQAAAAkAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADAAAAAAAAACcAAACYAAAA7AAAAP8AAAD+AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADsAAAAmAAAACcAAAAAAAAAAwAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAQAAAAAAAAAWAAAAXwAA
        AKQAAADUAAAA8QAAAP4AAAD+AAAA8QAAANQAAACkAAAAYAAAABcAAAAAAAAAAQAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA9EACL+kAAJfUAAArqAvQFVBAAgqghCEFQS/0gkK0LUKFdC6hiPQvEQn0
        L5AJ9C+QEgQgSBP0L8gSAABIEgAASBIAAEgSAABIE/QvyBIEIEgJ9C+QCfQvkIj0LxGFdC6hQrQtQkEv
        9IKghCEFUEACCqgL0BXUAAAr6QAAl/RAAi8=
</value>
  </data>
</root>